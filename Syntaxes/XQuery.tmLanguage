<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>xq</string>
		<string>xql</string>
		<string>xqm</string>
		<string>xqy</string>
		<string>xquery</string>
	</array>
	<key>firstLineMatch</key>
	<string>^\bxquery version\b.*</string>
	<key>foldingStartMarker</key>
	<string>(declare|.*\{\s*(//.*)?$)</string>
	<key>foldingStopMarker</key>
	<string>(.*\}\s*;?\s*|.*;)</string>
	<key>keyEquivalent</key>
	<string>^~X</string>
	<key>name</key>
	<string>XQuery</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>^xquery version .*;$</string>
			<key>name</key>
			<string>keyword.control.import.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+\.\d*(e[\-\+]?\d+)?))(?=[^a-zA-Z_])</string>
			<key>name</key>
			<string>constant.numeric.float.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=[^0-9a-zA-Z_])(?i:(\.\d+(e[\-\+]?\d+)?))</string>
			<key>name</key>
			<string>constant.numeric.float.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+e[\-\+]?\d+))</string>
			<key>name</key>
			<string>constant.numeric.float.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([1-9]+[0-9]*|0)</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(import|module|schema)\b</string>
			<key>name</key>
			<string>keyword.control.import.xquery</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\(:</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.xquery</string>
				</dict>
			</dict>
			<key>end</key>
			<string>:\)</string>
			<key>name</key>
			<string>comment.block.xquery</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>http://www.w3.org/TR/xpath-datamodel/#types</string>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])((xs:)(string|boolean|decimal|float|double|duration|dateTime|time|date|gYearMonth|gYear|gMonthDay|gDay|gMonth|hexBinary|base64Binary|anyURI|QName|NOTATION|anyAtomicType|anyType|anySimpleType|untypedAtomic|dayTimeDuration|yearMonthDuration|integer|nonPositiveInteger|negativeInteger|long|int|short|byte|nonNegativeInteger|unsignedLong|unsignedInt|unsignedShort|unsignedByte|positiveInteger|ENTITY|ID|NMTOKEN|language|NCName|Name|token|normalizedString))(?![:\-_a-zA-Z0-9])</string>
			<key>name</key>
			<string>support.type.xquery</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function_call</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.xquery</string>
				</dict>
			</dict>
			<key>match</key>
			<string>((\$)(?:([\-_a-zA-Z0-9]+)((:)))?([\-_a-zA-Z0-9]+))</string>
			<key>name</key>
			<string>variable.other.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>/(child|descendant|attribute|self|descendant-or-self|following-sibling|following|parent|ancestor|preceding-sibling|preceding|ancestor-or-self)::</string>
			<key>name</key>
			<string>support.constant.xquery</string>
		</dict>
		<dict>
			<key>include</key>
			<string>text.xml</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.xquery</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.xquery</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.xquery</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(declare)\s+(function)\s+((?:([\-_a-zA-Z0-9]+):)?([\-_a-zA-Z0-9]+))</string>
			<key>name</key>
			<string>meta.function.xquery</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.xquery</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.variable.xquery</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(declare)\s+(variable)</string>
			<key>name</key>
			<string>meta.variable.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(declare|namespace|preserve|no-preserve|inherit|no-inherit|strip|boundary-space|default|instance|option|copy-namespaces)\b</string>
			<key>name</key>
			<string>keyword.other.prolog.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(of|as|by|in|at|or|and)(?![:\-_a-zA-Z0-9])</string>
			<key>name</key>
			<string>keyword.operator.logical.xquery</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.flow.xquery</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(for|let|return|where|if|then|else|order by|satisfies|every)(?![:\-_a-zA-Z0-9])</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.xquery</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(element|attribute|document-node|schema-element|schema-attribute|processing-instruction|comment|text|node)(?![:\-_a-zA-Z0-9])</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.xquery</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>:=</string>
			<key>name</key>
			<string>keyword.operator.assignment.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])(\+|-|&lt;=?|&gt;=?|eq|ne|lt|le|ge|gt|\*|div|idiv|mod)(?![:\-_a-zA-Z0-9])</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.xquery</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;![:\-_a-zA-Z0-9])((fn:)?(abs|adjust-date-to-timezone|adjust-date-to-timezone|adjust-dateTime-to-timezone|adjust-dateTime-to-timezone|adjust-time-to-timezone|adjust-time-to-timezone|avg|base-uri|base-uri|boolean|ceiling|codepoint-equal|codepoints-to-string|collection|collection|compare|concat|contains|count|current-date|current-dateTime|current-time|data|dateTime|day-from-date|day-from-dateTime|days-from-duration|deep-equal|default-collation|distinct-values|distinct-values|doc|doc-available|document-uri|empty|ends-with|error|escape-uri|exactly-one|exists|false|floor|hours-from-dateTime|hours-from-duration|hours-from-time|id|idref|implicit-timezone|in-scope-prefixes|index-of|insert-before|lang|last|local-name|local-name-from-QName|lower-case|matches|max|min|minutes-from-dateTime|minutes-from-duration|minutes-from-time|month-from-date|month-from-dateTime|months-from-duration|name|namespace-uri|namespace-uri-for-prefix|namespace-uri-from-QName|nilled|node-name|normalize-space|normalize-unicode|not|number|one-or-more|position|prefix-from-QName|QName|remove|replace|resolve-QName|resolve-uri|reverse|root|round|round-half-to-even|seconds-from-dateTime|seconds-from-duration|seconds-from-time|starts-with|static-base-uri|string|string-join|string-length|string-to-codepoints|subsequence|substring|substring-after|substring-before|sum|timezone-from-date|timezone-from-dateTime|timezone-from-time|tokenize|trace|translate|true|unordered|upper-case|year-from-date|year-from-dateTime|years-from-duration|zero-or-one))(?=\s*\()</string>
			<key>name</key>
			<string>support.function.builtin.xquery</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.begin.xquery</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.end.xquery</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>function_call</key>
		<dict>
			<key>begin</key>
			<string>[\-_a-zA-Z0-9]+:[\-_a-zA-Z0-9]+(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.xquery</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.xquery</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function_call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.xquery</string>
	<key>uuid</key>
	<string>5FB86104-E38E-4DAA-B929-DF98011DECBD</string>
</dict>
</plist>
